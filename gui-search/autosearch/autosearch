#!/bin/tcsh

# Paths are crap. need absolute ones because we change directories
# to search dir to avoid screwing up index_db
set exe_dir = `dirname "$0"`
set abs_exe_dir = `(cd $exe_dir; echo $PWD)`
set orig_dir = $PWD

set ver = `basename "$0" | cut -s -d'-' -f2`
if ( "$ver" == "" ) then
	set ver = "a"
#	echo "please execute '$0-a' or '$0-b'" > /dev/stderr
#	exit 1
endif

if ( $# != 2 ) then
	echo "usage: $0 <directory name> <auto-index:{0,1}>" > /dev/stderr
	exit 1
endif

#set vet = "a

set auto_index = "$2"
set search_dir = `echo "$1" | sed 's#/*$##' `
set db_name = ".searchdb-$ver"
set index_db = "$search_dir/$db_name"
set indexer = "$abs_exe_dir/indexer-$ver/indexer"
set helper = "$abs_exe_dir/_helper-$ver"
set remove = "$abs_exe_dir/_remove-$ver"
set merge = "$abs_exe_dir/_merge-$ver"
set search = "$abs_exe_dir/search-$ver/search"


if ( ! -d "$search_dir" ) then 
	printf "'%s' is not a directory\n" "$search_dir" > /dev/stderr
	exit 1
endif

if ( "$auto_index" == "2" ) then
	#regenerate from scratch
	(cd "$search_dir"; $indexer "$db_name" ".")
	exit 0
endif



# check for index
if ( -e "$index_db" ) then
	# if found, scan for files with newer time stamps
	

	if ( "$auto_index" == "0" ) then
		#Don't mess with the index.
	else if ( "$auto_index" == "1" ) then
		# Pray that the paths are good.
		cd "$search_dir"

		# Calls the _helper on every newer file
		if (! { find "." -cnewer "$db_name" \
				-type "f" \
				-exec "$helper" "$indexer" "$remove" \
				"$db_name" '{}' ';' }) then
			echo "Error in find" > /dev/stderr
			exit 1
		endif

		cd "$orig_dir"

		# index_db should now be a pushed together, so lets sort it.
		sort -u < "$index_db" > "$index_db.sort"
		mv "$index_db.sort" "$index_db"

		# Eliminate empty lines and merge keywords

		$merge "$index_db" > "$index_db.merge"
		mv "$index_db.merge" "$index_db"
	endif

else
	#echo "index nonexsistent, generating..."
	# if index not found, just index it
	(cd "$search_dir"; $indexer "$db_name" ".")
endif

exec "$search" "$index_db" 
